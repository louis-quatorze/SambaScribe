import { NextRequest, NextResponse } from 'next/server';
import { generateChatCompletion } from "@/lib/aiClient";

export async function GET() {
  return NextResponse.json({ message: 'Root API routes are working' });
}

export async function POST(req: NextRequest) {
  try {
    const body = await req.json();
    const { fileUrl } = body;
    
    console.log("[Root API] Received request:", body);
    
    if (!fileUrl) {
      return NextResponse.json(
        { error: "No file URL provided" },
        { status: 400 }
      );
    }

    // 1. Get file content from URL
    const fullUrl = fileUrl.startsWith('http') 
      ? fileUrl 
      : new URL(fileUrl, process.env.NEXTAUTH_URL || `http://localhost:${process.env.PORT || '3000'}`).toString();
    
    console.log("[Root API] Attempting to fetch file from:", fullUrl);
    
    try {
      const response = await fetch(fullUrl);
      
      if (!response.ok) {
        console.error(`[Root API] Failed to fetch file: ${response.statusText}, Status: ${response.status}`);
        throw new Error(`Failed to fetch file: ${response.statusText}`);
      }
      
      const content = await response.text();
      console.log("[Root API] Fetched file content, length:", content.length);

      // Extract filename from URL
      const filename = new URL(fileUrl).pathname.split('/').pop() || 'unknown.pdf';

      // For demonstration, return a mock response instead of calling AI
      return NextResponse.json({
        filename,
        aiSummary: "This is a placeholder summary generated by the root API endpoint instead of AI.",
        mnemonics: [
          {
            pattern: "Example pattern",
            mnemonic: "Example mnemonic",
            description: "This is a placeholder mnemonic from the root API endpoint"
          }
        ]
      });
      
    } catch (fetchError: any) {
      console.error("[Root API] Fetch error:", fetchError);
      return NextResponse.json(
        { error: `Failed to fetch file: ${fetchError.message}` },
        { status: 500 }
      );
    }
    
  } catch (error: any) {
    console.error("[Root API] Error:", error);
    return NextResponse.json(
      { error: error.message || "An error occurred processing the file" },
      { status: 500 }
    );
  }
} 